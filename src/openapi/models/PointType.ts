/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GeneralPoint,
    GeneralPointFromJSON,
    GeneralPointFromJSONTyped,
    GeneralPointToJSON,
} from './';

/**
 * 
 * @export
 * @interface PointType
 */
export interface PointType {
    /**
     * 
     * @type {number}
     * @memberof PointType
     */
    pointTypeId?: number;
    /**
     * 
     * @type {string}
     * @memberof PointType
     */
    pointType?: string;
    /**
     * 
     * @type {Array<GeneralPoint>}
     * @memberof PointType
     */
    generalPoints?: Array<GeneralPoint>;
}

export function PointTypeFromJSON(json: any): PointType {
    return PointTypeFromJSONTyped(json, false);
}

export function PointTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PointType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pointTypeId': !exists(json, 'pointTypeId') ? undefined : json['pointTypeId'],
        'pointType': !exists(json, 'pointType') ? undefined : json['pointType'],
        'generalPoints': !exists(json, 'generalPoints') ? undefined : ((json['generalPoints'] as Array<any>).map(GeneralPointFromJSON)),
    };
}

export function PointTypeToJSON(value?: PointType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pointTypeId': value.pointTypeId,
        'pointType': value.pointType,
        'generalPoints': value.generalPoints === undefined ? undefined : ((value.generalPoints as Array<any>).map(GeneralPointToJSON)),
    };
}

