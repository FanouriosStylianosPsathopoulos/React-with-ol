/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PointType,
    PointTypeFromJSON,
    PointTypeFromJSONTyped,
    PointTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface Apartment
 */
export interface Apartment {
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    generalPointId?: number;
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    longitude?: number;
    /**
     * 
     * @type {PointType}
     * @memberof Apartment
     */
    pointType: PointType;
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    floor: number;
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    levels: number;
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    year: number;
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    squareMeters: number;
    /**
     * 
     * @type {number}
     * @memberof Apartment
     */
    buildingFees: number;
    /**
     * 
     * @type {string}
     * @memberof Apartment
     */
    description?: string;
}

export function ApartmentFromJSON(json: any): Apartment {
    return ApartmentFromJSONTyped(json, false);
}

export function ApartmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Apartment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'generalPointId': !exists(json, 'generalPointId') ? undefined : json['generalPointId'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'pointType': PointTypeFromJSON(json['pointType']),
        'floor': json['floor'],
        'levels': json['levels'],
        'year': json['year'],
        'squareMeters': json['squareMeters'],
        'buildingFees': json['buildingFees'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function ApartmentToJSON(value?: Apartment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'generalPointId': value.generalPointId,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'pointType': PointTypeToJSON(value.pointType),
        'floor': value.floor,
        'levels': value.levels,
        'year': value.year,
        'squareMeters': value.squareMeters,
        'buildingFees': value.buildingFees,
        'description': value.description,
    };
}

