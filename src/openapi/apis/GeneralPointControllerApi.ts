/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    GeneralPointProjection,
    GeneralPointProjectionFromJSON,
    GeneralPointProjectionToJSON,
    PointEncapsulation,
    PointEncapsulationFromJSON,
    PointEncapsulationToJSON,
} from '../models';

export interface GetPointInfoRequest {
    pointEncapsulation: PointEncapsulation;
}

/**
 * 
 */
export class GeneralPointControllerApi extends runtime.BaseAPI {

    /**
     */
    async getPointInfoRaw(requestParameters: GetPointInfoRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GeneralPointProjection>> {
        if (requestParameters.pointEncapsulation === null || requestParameters.pointEncapsulation === undefined) {
            throw new runtime.RequiredError('pointEncapsulation','Required parameter requestParameters.pointEncapsulation was null or undefined when calling getPointInfo.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/pointInfo`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PointEncapsulationToJSON(requestParameters.pointEncapsulation),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GeneralPointProjectionFromJSON(jsonValue));
    }

    /**
     */
    async getPointInfo(requestParameters: GetPointInfoRequest, initOverrides?: RequestInit): Promise<GeneralPointProjection> {
        const response = await this.getPointInfoRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
