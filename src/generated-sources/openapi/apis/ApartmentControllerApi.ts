/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Apartment,
    ApartmentFromJSON,
    ApartmentToJSON,
    ApartmentProjection,
    ApartmentProjectionFromJSON,
    ApartmentProjectionToJSON,
    ApartmentRequest,
    ApartmentRequestFromJSON,
    ApartmentRequestToJSON,
} from '../models';

export interface GetApartmentByIdRequest {
    generalPointId: number;
}

export interface NewApartmentRequest {
    apartmentRequest: ApartmentRequest;
}

/**
 * 
 */
export class ApartmentControllerApi extends runtime.BaseAPI {

    /**
     */
    async getApartmentByIdRaw(requestParameters: GetApartmentByIdRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ApartmentProjection>> {
        if (requestParameters.generalPointId === null || requestParameters.generalPointId === undefined) {
            throw new runtime.RequiredError('generalPointId','Required parameter requestParameters.generalPointId was null or undefined when calling getApartmentById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/getApartmentById/{generalPointId}`.replace(`{${"generalPointId"}}`, encodeURIComponent(String(requestParameters.generalPointId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApartmentProjectionFromJSON(jsonValue));
    }

    /**
     */
    async getApartmentById(requestParameters: GetApartmentByIdRequest, initOverrides?: RequestInit): Promise<ApartmentProjection> {
        const response = await this.getApartmentByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async newApartmentRaw(requestParameters: NewApartmentRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Apartment>> {
        if (requestParameters.apartmentRequest === null || requestParameters.apartmentRequest === undefined) {
            throw new runtime.RequiredError('apartmentRequest','Required parameter requestParameters.apartmentRequest was null or undefined when calling newApartment.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/saveApartment`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApartmentRequestToJSON(requestParameters.apartmentRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApartmentFromJSON(jsonValue));
    }

    /**
     */
    async newApartment(requestParameters: NewApartmentRequest, initOverrides?: RequestInit): Promise<Apartment> {
        const response = await this.newApartmentRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
